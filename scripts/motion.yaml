motion_sensor:
  alias: Motion sensor script
  mode: restart
  max_exceeded: silent
  fields:
    lights:
      description: "Lights to control"
    occupancy_sensor:
      description: "Motion sensor"
    lx_sensor:
      description: "Luminance sensor"
    min_lx:
      description: "Minimum luminance input"
    scene_morning:
      description: "Scene for morning"
    scene_day:
      description: "Scene for day"
    scene_evening:
      description: "Scene for evening"
    scene_night:
      description: "Scene for night"
    wait_morning:
      description: "Seconds to wait morning"
      default: 600
    wait_day:
      description: "Seconds to wait day"
      default: 2400
    wait_evening:
      description: "Seconds to wait evening"
      default: 1500
    wait_night:
      description: "Seconds to wait night"
      default: 60
  sequence:
  - choose:
    - conditions:
      - condition: time
        after: "04:00:00"
        before: "09:00:00"
      - condition: template
        value_template: "{{ states(lx_sensor) <= states(min_lux) }}"
      sequence:
      - service: scene.turn_on
        target:
          entity_id: "{{ scene_morning }}"
        data:
          transition: 0.5
    - conditions:
      - condition: time
        after: "09:00:00"
        before: "20:00:00"
      - condition: template
        value_template: "{{ states(lx_sensor) <= states(min_lux) }}"
      sequence:
      - service: scene.turn_on
        target:
          entity_id: "{{ scene_day }}"
        data:
          transition: 0.5
    - conditions:
      - condition: time
        after: "20:00:00"
        before: "23:59:59"
      - condition: template
        value_template: "{{ states(lx_sensor) <= states(min_lux) }}"
      sequence:
      - service: scene.turn_on
        target:
          entity_id: "{{ scene_evening }}"
        data:
          transition: 0.5
    - conditions:
      - condition: time
        after: "00:00:00"
        before: "04:00:00"
      - condition: template
        value_template: "{{ states(lx_sensor) <= states(min_lux) }}"
      sequence:
      - service: scene.turn_on
        target:
          entity_id: "{{ scene_night }}"
        data:
          transition: 1.0
  - wait_template: "{{ is_state(occupancy_sensor, 'off') }}"
  - choose:
    - conditions:
        - condition: time
          after: "04:00:00"
          before: "09:00:00"
      sequence: 
        - delay: "{{ wait_morning }}"
    - conditions:
        - condition: time
          after: "09:00:00"
          before: "20:00:00"
      sequence: 
        - delay: "{{ wait_day }}"
    - conditions:
        - condition: time
          after: "20:00:00"
          before: "23:59:59"
      sequence: 
        - delay: "{{ wait_evening }}"
    - conditions:
        - condition: time
          after: "00:00:00"
          before: "04:00:00"
      sequence: 
        - delay: "{{ wait_night }}"
  - service: light.turn_off
    target:
      entity_id: "{{ lights }}"
    data:
      transition: 40
set_hue_sensitivity:
  alias: Motion sensor script
  mode: restart
  max_exceeded: silent
  fields:
    mode:
      description: Either 'low', 'medium' or 'high'
  sequence:
  - service: mqtt.publish
    data:
      topic: "zigbee2mqtt/Bedroom Sensor/set"
      payload: '{"motion_sensitivity": "{{ mode }}" }'